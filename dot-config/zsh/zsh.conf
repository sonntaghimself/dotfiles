# Make brew applications available in path
eval "$(/opt/homebrew/bin/brew shellenv)"

# R broke
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8
# export LC_ALL=C
export PKG_CONFIG=/opt/homebrew/bin/pkg-config

# Pyenv setup
export PYENV_ROOT="$HOME/.pyenv"
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"
pyenv activate base

# lazygit config repository
export XDG_CONFIG_HOME="$HOME/.config"

# Eza Config directory
export EZA_CONFIG_DIR="$HOME/.config/eza/"

#################### ZINIT #####################
ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"

# Download Zinit, if its's not there yet
if [ ! -d "$ZINIT_HOME" ]; then
  mkdir -p "$(dirname $ZINIT_HOME)"
  git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
fi

# load zinit
source "${ZINIT_HOME}/zinit.zsh"

# Add in zsh plugins
zinit light zsh-users/zsh-syntax-highlighting
zinit light zsh-users/zsh-completions
zinit light zsh-users/zsh-autosuggestions
zinit light Aloxaf/fzf-tab
# trying out
# zinit light yuki-ycino/fzf-preview.zsh # No idea what this acutally does

# Snippets
zinit snippet OMZP::git
zinit snippet OMZP::sudo

# Load completions
autoload -U compinit && compinit

# suggested by documentation
zinit cdreplay -q

# oh-my-posh
# eval "$(oh-my-posh init zsh --config $HOME/.config/ohmyposh/zen.toml)"
# eval "$(oh-my-posh init zsh --config $HOME/.config/ohmyposh/bubbles.json)"
eval "$(oh-my-posh init zsh --config $HOME/.config/ohmyposh/mycat.toml)"

# accept autosuggestion
bindkey -v # Turns out, i prefer this to the vi-mode plugin.
# INFO: Order is important here; First set -v, then my specific settings.
bindkey '^f' autosuggest-accept #NOTE: now working
bindkey '^p' history-search-backward #TODO: maybe map to arrow keys?
bindkey '^n' history-search-forward

# History
HISTSIZE=5000
HISTFILE=~/.zsh_history
SAVEHIST=$HISTSIZE
HISTDUP=erase
setopt appendhistory
setopt sharehistory
setopt hist_ignore_space
setopt hist_save_no_dups
setopt hist_ignore_dups
setopt hist_find_no_dups

# Completion styling
# The following line is very important; case insensitivity after all commands
zstyle ':completion:*' matcher-list '' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'
zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"
zstyle ':completion:*' menu no
# zstyle ':fzf-tab:complete:cd:*' fzf-preview 'ls --color $realpath'
# zstyle ':fzf-tab:complete:__zoxide_z:*' fzf-preview 'ls --color $realpath'
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'eza -1 --icons=never --color=auto $realpath'
zstyle ':fzf-tab:complete:__zoxide_z:*' fzf-preview 'eza -1 --icons=never --color=auto $realpath'

# Shell integrations
# NOTE: These lines don't do what I thought they would
# fzf --preview 'cat {}'
# eval "$(fzf --preview 'cat {}')"
eval "$(fzf --zsh)"
eval "$(zoxide init --cmd cd zsh)"

################### Aliases ####################
alias zsh.conf="nvim ~/.dotfiles/dot-zshrc"
alias alacritty.conf="nvim ~/.dotfiles/alacritty/alacritty.toml"
alias v="nvim"
alias ls="eza --icons=never --color=auto"
alias commit="git commit -m 'randomly committing the status quo'"
alias comma="git add . && git commit -m 'randomly committing the status quo'"
alias lg="lazygit"
alias stow="stow  -D -d ~/.dotfiles . && stow -d ~/.dotfiles . && cp -r ~/.dotfiles/nix ~/.config/"
# obsolete through zoxide
# alias work="cd ~/Documents/Work/"
# alias neben="cd ~/Documents/Peops/MO/Neben"
# alias lab="cd ~/Documents/Work/Lab"

################################# Functions ##################################
# {{{
function main() {
  local mainFileRnw="main.rnw"
  local mainFileRtex="main.rtex"
  local mainFileTex="main.tex"
  
  echo "Current directory: $PWD"

  if [[ -e "$mainFileRnw" ]]; then
    nvim "$mainFileRnw"
  elif [[ -e "$mainFileRtex" ]]; then
    nvim "$mainFileRtex"
  elif [[ -e "$mainFileTex" ]]; then
    nvim "$mainFileTex"
  else
    cd TexFiles
    if [[ -e "$mainFileRnw" ]]; then
      nvim "$mainFileRnw"
    elif [[ -e "$mainFileRtex" ]]; then
      nvim "$mainFileRtex"
    elif [[ -e "$mainFileTex" ]]; then
      nvim "$mainFileTex"
    else
      echo "No main.rnw, main.rtex or main.tex file found."
    fi
  fi
}

find() {
  local name="$1"
  if [ -z ${var+x} ]; then
    defaults write com.apple.Finder AppleShowAllFiles true
  else
    defaults write com.apple.Finder AppleShowAllFiles "$name"
  fi
  killall Finder
}

apa() {
  local name="${1:-LaTeX}"
  cp -r ~/Documents/Work/General/LaTeX/templates/writing_paper "$name"
}

min() {
  local name="${1:-LaTeX}"
  cp -r ~/Documents/Work/General/LaTeX/templates/minimal "$name"
}

rmin() {
  local name="${1:-LaTeX}"
  cp -r ~/Documents/Work/General/LaTeX/templates/minimal_RNW "$name"
}

finish() {
  local name="${1:-LaTeX}"
  cp -r ./main.pdf ~/Desktop/"$name".pdf
}

pres() {
  local name="${1:-LaTeX}"
  cp -r ~/Documents/Work/General/LaTeX/templates/presentations/default "$name"
}

min_pres() {
  local name="${1:-LaTeX}"
  cp -r ~/Documents/Work/General/LaTeX/templates/presentations/minimal "$name"
}

eigen() {
  cp -r ~/Documents/Work/General/LaTeX/templates/Eigen ./Eigen
}
# }}}
