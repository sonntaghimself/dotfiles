# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Make brew applications available in path
eval "$(/opt/homebrew/bin/brew shellenv)"

# R broke
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8
export PKG_CONFIG=/opt/homebrew/bin/pkg-config

# Pyenv setup
export PYENV_ROOT="$HOME/.pyenv"
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"
pyenv activate base

#################### ZINIT #####################
ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"

# Download Zinit, if its's not there yet
if [ ! -d "$ZINIT_HOME" ]; then
  mkdir -p "$(dirname $ZINIT_HOME)"
  git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
fi

# load zinit
source "${ZINIT_HOME}/zinit.zsh"

# Add p10k
zinit ice depth=1; zinit light romkatv/powerlevel10k

# Add in zsh plugins
zinit light zsh-users/zsh-syntax-highlighting
zinit light zsh-users/zsh-completions
zinit light zsh-users/zsh-autosuggestions
zinit light Aloxaf/fzf-tab

# Load completions
autoload -U compinit && compinit

# suggested by documentation
zinit cdreplay -q

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# accept autosuggestion
# bindkey 'tab' autosuggest-accept #NOTE: not working
bindkey '^p' history-search-backward #TODO: maybe map to arrow keys?
bindkey '^n' history-search-forward

# History
HISTSIZE=5000
HISTFILE=~/.zsh_history
SAVEHIST=$HISTSIZE
HISTDUP=erase
setopt appendhistory
setopt sharehistory
setopt hist_ignore_space
setopt hist_save_no_dups
setopt hist_ignore_dups
setopt hist_find_no_dups

# Completion styling
zstyle ':completion:*' matcher-lst 'm:{a-z}={A-Za-z}'
zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"
zstyle ':completion:*' menu no
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'ls --color $realpath'

# Aliases
alias zsh.conf="nvim ~/.config/zsh/zsh.conf"
alias alacritty.conf="nvim ~/.config/alacritty/alacritty.toml"
alias v="nvim"
alias ls="ls --color"
alias work="cd ~/Documents/Work/"
alias commit="git commit -m 'randomly committing the status quo'"
alias comma="git add . && git commit -m 'randomly committing the status quo'"
alias neben="cd ~/Documents/Peops/MO/Neben"
alias lab="cd ~/Documents/Work/Lab"
alias lg="lazygit"

# Shell integrations
eval "$(fzf --zsh)"

################################# Functions ##################################
# {{{
function main() {
  local mainFileRnw="main.rnw"
  local mainFileTex="main.tex"
  
  echo "Current directory: $PWD"

  if [[ -e "$mainFileRnw" ]]; then
    nvim "$mainFileRnw"
  elif [[ -e "$mainFileTex" ]]; then
    nvim "$mainFileTex"
  else
    cd TexFiles
    if [[ -e "$mainFileRnw" ]]; then
      nvim "$mainFileRnw"
    elif [[ -e "$mainFileTex" ]]; then
      nvim "$mainFileTex"
    else
      echo "No main.rnw or main.tex file found."
    fi
  fi
}

find() {
  local name="$1"
  if [ -z ${var+x} ]; then
    defaults write com.apple.Finder AppleShowAllFiles true
  else
    defaults write com.apple.Finder AppleShowAllFiles "$name"
  fi
  killall Finder
}

apa() {
  local name="$1"
  cp -r ~/Documents/Work/General/LaTeX/templates/writing_paper "$name"
}

min() {
  local name="$1"
  cp -r ~/Documents/Work/General/LaTeX/templates/minimal "$name"
}

rmin() {
  local name="$1"
  cp -r ~/Documents/Work/General/LaTeX/templates/minimal_RNW "$name"
}

finish() {
  local name="$1"
  cp -r ./main.pdf ~/Desktop/"$name".pdf
}

pres() {
  local name="$1"
  cp -r ~/Documents/Work/General/LaTeX/templates/presentations/default "$name"
}

min_pres() {
  local name="$1"
  cp -r ~/Documents/Work/General/LaTeX/templates/presentations/minimal "$name"
}

eigen() {
  cp -r ~/Documents/Work/General/LaTeX/templates/Eigen ./Eigen
}
# }}}
